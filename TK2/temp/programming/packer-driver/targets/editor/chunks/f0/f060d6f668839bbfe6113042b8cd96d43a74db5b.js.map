{"version":3,"sources":["file:///D:/TankFight/TK2/assets/text/enemytank/enemytank.ts"],"names":["_decorator","Component","SpriteFrame","RigidBody2D","Vec3","Collider2D","Contact2DType","Vec2","ccclass","property","Direction","LEFT","RIGHT","UP","DOWN","UPLEFT","UPRIGHT","DOWNLEFT","DOWNRIGHT","Directions","enemytank","direction","tanklife","intervalInSeconds","currentspeed","lastChangeTime","timer","lastPosition","EPSILON","pressedKeys","spreadspeed","aitankspeed","deltx","delty","onLoad","node","position","Date","now","start","changeDirection","collider","getComponent","on","BEGIN_CONTACT","onBeginContact","update","dt","player","parent","getChildByName","Math","abs","x","y","normalize","set","selfCollider","otherCollider","newDirection","floor","random","updateSpriteFrame","newVelocity","clone","multiplyScalar","speed","rigidBody","linearVelocity","spriteNode","sprite","cc","Sprite","equals","spriteFrame","upSpriteFrame","downSpriteFrame","leftSpriteFrame","rightSpriteFrame","rightanddownSpriteFrame","rightandupSpriteFrame","leftanddownSpriteFrame","leftandupSpriteFrame"],"mappings":"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","sourcesContent":["import { _decorator, Component, Prefab, Sprite, systemEvent, SpriteFrame, Input, input, EventMouse, SystemEvent, Node, EventKeyboard, macro, RigidBody2D, Vec3, instantiate, Collider2D, Contact2DType } from 'cc';\r\nimport { Vec2 } from 'cc';\r\n//import { Bullet } from './Bullet'; // 假设 Bullet 脚本的文件路径和类名为 Bullet\r\n\r\nconst { ccclass, property } = _decorator;\r\n\r\n\r\n// 定义方向向量\r\nconst Direction = {\r\n    LEFT: new Vec2(-1, 0),\r\n    RIGHT: new Vec2(1, 0),\r\n    UP: new Vec2(0, 1),\r\n    DOWN: new Vec2(0, -1),\r\n    UPLEFT: new Vec2(-1, 1),\r\n    UPRIGHT: new Vec2(1, 1),\r\n    DOWNLEFT: new Vec2(-1, -1),\r\n    DOWNRIGHT: new Vec2(1, -1)\r\n};\r\n\r\nconst Directions = [\r\n    new Vec2(-1, 0),  // LEFT\r\n    new Vec2(1, 0),   // RIGHT\r\n    new Vec2(0, 1),   // UP\r\n    new Vec2(0, -1),  // DOWN\r\n];\r\n\r\n@ccclass('enemytank')\r\nexport class enemytank extends Component {\r\n\r\n    //加速的倍率\r\n    @property\r\n    public magnification: number = 5;\r\n\r\n    @property(RigidBody2D)\r\n    rigidBody: RigidBody2D = null;\r\n\r\n    @property(SpriteFrame)\r\n    private upSpriteFrame: SpriteFrame | null = null;\r\n\r\n    @property(SpriteFrame)\r\n    private downSpriteFrame: SpriteFrame | null = null;\r\n\r\n    @property(SpriteFrame)\r\n    private leftSpriteFrame: SpriteFrame | null = null;\r\n\r\n    @property(SpriteFrame)\r\n    private rightSpriteFrame: SpriteFrame | null = null;\r\n\r\n    @property(SpriteFrame)\r\n    private rightandupSpriteFrame: SpriteFrame | null = null;\r\n\r\n    @property(SpriteFrame)\r\n    private rightanddownSpriteFrame: SpriteFrame | null = null;\r\n\r\n    @property(SpriteFrame)\r\n    private leftandupSpriteFrame: SpriteFrame | null = null;\r\n\r\n    @property(SpriteFrame)\r\n    private leftanddownSpriteFrame: SpriteFrame | null = null;\r\n\r\n\r\n    @property(SpriteFrame)\r\n    private speed: number = 2;\r\n\r\n\r\n    private direction: Vec2 = new Vec2(0, 0);\r\n    //坦克生命值\r\n    tanklife: number = 5;\r\n    intervalInSeconds: number = 5;\r\n    currentspeed: Vec2 = new Vec2(0, 0);\r\n\r\n\r\n    private lastChangeTime: number; // 上次位置改变的时间戳\r\n    private timer: number; // 累计经过的时间\r\n\r\n    private lastPosition: Vec3 = new Vec3();\r\n    private readonly EPSILON: number = 0.0001;\r\n    pressedKeys: any;\r\n    spreadspeed: Vec2 = new Vec2(0, 0);\r\n    aitankspeed: Vec2;\r\n\r\n    deltx: number = 0;\r\n    delty: number = 0;\r\n\r\n\r\n    onLoad() {\r\n        this.lastPosition = this.node.position; // 初始化上次记录的位置为当前位置\r\n        this.lastChangeTime = Date.now(); // 初始化上次位置改变的时间戳为当前时间\r\n        this.timer = 0; // 初始化计时器为0\r\n    }\r\n\r\n    start() {\r\n        //console.log('生成enemytank');\r\n        this.aitankspeed = new Vec2(0, 0);\r\n        this.changeDirection();\r\n\r\n        let collider = this.getComponent(Collider2D);\r\n        if (collider) {\r\n            collider.on(Contact2DType.BEGIN_CONTACT, this.onBeginContact, this);\r\n        }\r\n    }\r\n\r\n    update(dt: number) {\r\n        // 检测位置是否改变\r\n\r\n        const player = this.node.parent.getChildByName('tank0');\r\n        if (Math.abs(this.node.position.x - player.position.x) < 100 || Math.abs(this.node.position.y - player.position.y) < 100) {\r\n            this.aitankspeed.x = player.position.x - this.node.position.x;\r\n            this.aitankspeed.y = player.position.y - this.node.position.y;\r\n            this.aitankspeed.normalize();\r\n\r\n            this.changeDirection(); // 调用函数\r\n        }\r\n        else {\r\n            if (this.node.position.x - this.lastPosition.x > this.EPSILON || this.node.position.y - this.lastPosition.y > this.EPSILON) {\r\n                // console.log('位置改变');\r\n                this.lastPosition.set(this.node.position); // 更新记录的位置\r\n                this.lastChangeTime = Date.now(); // 更新位置改变的时间戳\r\n                this.timer = 0; // 重置计时器\r\n            }\r\n            else {\r\n                this.timer += dt;\r\n                // 检查是否超过2秒\r\n                if (this.timer >= 3) {\r\n                    this.timer = 0; // 重置计时器\r\n                    this.changeDirection(); // 调用函数\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    onBeginContact(selfCollider: Collider2D, otherCollider: Collider2D) {\r\n        ;\r\n        this.changeDirection(); // 自定义方法，用于改变坦克的移动方向\r\n\r\n    }\r\n\r\n    changeDirection() {\r\n\r\n        let newDirection = Math.floor(Math.random() * 4); // 假设有四个方向\r\n        while (this.currentspeed === Directions[newDirection]) {\r\n            newDirection = Math.floor(Math.random() * 4);\r\n        }\r\n\r\n        this.currentspeed = Directions[newDirection];\r\n        this.updateSpriteFrame();\r\n\r\n\r\n        if (this.aitankspeed.x !== 0 || this.aitankspeed.y !== 0) {\r\n            let newVelocity = this.aitankspeed.clone().multiplyScalar(this.speed);\r\n            this.rigidBody.linearVelocity = newVelocity;\r\n            this.currentspeed=newVelocity;\r\n\r\n        }\r\n\r\n        else {\r\n            let newVelocity = Directions[newDirection].clone().multiplyScalar(this.speed);\r\n            this.rigidBody.linearVelocity = newVelocity;\r\n            this.currentspeed=newVelocity;\r\n        }\r\n\r\n    }\r\n\r\n    private updateSpriteFrame(): void {\r\n        const spriteNode = this.node.getChildByName('RenderSprite0');\r\n        const sprite = spriteNode ? spriteNode.getComponent(cc.Sprite) as cc.Sprite : null;\r\n        if (sprite) {\r\n            switch (true) {\r\n                case this.currentspeed.equals(Direction.UP):\r\n                    sprite.spriteFrame = this.upSpriteFrame;\r\n                    break;\r\n                case this.currentspeed.equals(Direction.DOWN):\r\n                    sprite.spriteFrame = this.downSpriteFrame;\r\n                    break;\r\n                case this.currentspeed.equals(Direction.LEFT):\r\n                    sprite.spriteFrame = this.leftSpriteFrame;\r\n                    break;\r\n                case this.currentspeed.equals(Direction.RIGHT):\r\n                    sprite.spriteFrame = this.rightSpriteFrame;\r\n                    break;\r\n                case this.currentspeed.equals(Direction.DOWNRIGHT):\r\n                    sprite.spriteFrame = this.rightanddownSpriteFrame;\r\n                    break;\r\n                case this.currentspeed.equals(Direction.UPRIGHT):\r\n                    sprite.spriteFrame = this.rightandupSpriteFrame;\r\n                    break;\r\n                case this.currentspeed.equals(Direction.DOWNLEFT):\r\n                    sprite.spriteFrame = this.leftanddownSpriteFrame;\r\n                    break;\r\n                case this.currentspeed.equals(Direction.UPLEFT):\r\n                    sprite.spriteFrame = this.leftandupSpriteFrame;\r\n                    break;\r\n                default:\r\n                    // 默认情况下，可以保持原状或设置为静止状态的纹理\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\n/*\r\n\r\n当敌人与玩家的距离小于某个设定值的时候，敌人就能发现玩家，然后去攻击玩家。\r\ncc.Class({\r\n    extends: cc.Component,\r\n=\r\n    properties: {\r\n        player:cc.Node,//不建议直接用挂载的方式，建议在onLoad里拿节点\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad () {\r\n        this.initTime = 0;\r\n        //this.player = cc.Find(\"Canvas/Bg/tank\");//建议使用这种方法拿到节点，\r\n    },\r\n\r\n    start () {\r\n\r\n    },\r\n\r\n    update (dt) {\r\n        this.initTime++;\r\n        //判断player和enemy节点距离，并且60帧才进行一次实时朝向的判断\r\n        let playerPos = this.player.convertToWorldSpaceAR(cc.v2(0, 0));\r\n        let thisPos = this.node.convertToWorldSpaceAR(cc.v2(0, 0));\r\n        if((Math.abs(playerPos.x - thisPos.x) < 300 && Math.abs(playerPos.y - thisPos.y) < 300)&&this.initTime>60){\r\n            let r = Math.atan2(playerPos.y - thisPos.y, playerPos.x - thisPos.x);\r\n            let degree = r * 180 / Math.PI;\r\n            degree = 360 - degree;\r\n            degree = degree - 90;\r\n            this.node.angle = -degree;\r\n            this.initTime = 0;\r\n        }\r\n    \t\r\n    },\r\n});\r\n\r\n\r\n*/\r\n\r\n\r\n\r\n"]}