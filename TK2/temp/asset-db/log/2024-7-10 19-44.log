2024-7-10 19:44:29-log: Cannot access game frame or container.
2024-7-10 19:44:29-debug: asset-db:require-engine-code (1286ms)
2024-7-10 19:44:30-log: meshopt wasm decoder initialized
2024-7-10 19:44:30-log: [box2d]:box2d wasm lib loaded.
2024-7-10 19:44:30-log: [bullet]:bullet wasm lib loaded.
2024-7-10 19:44:30-log: Cocos Creator v3.8.3
2024-7-10 19:44:30-debug: [Assets Memory track]: asset-db:worker-init: initEngine start:24.38MB, end 77.68MB, increase: 53.30MB
2024-7-10 19:44:32-debug: [Assets Memory track]: asset-db-plugin-register: builder start:82.13MB, end 203.98MB, increase: 121.85MB
2024-7-10 19:44:30-debug: [Assets Memory track]: asset-db-plugin-register: programming start:78.56MB, end 82.11MB, increase: 3.55MB
2024-7-10 19:44:32-debug: [Assets Memory track]: asset-db-plugin-register: engine-extends start:204.21MB, end 207.34MB, increase: 3.13MB
2024-7-10 19:44:32-debug: [Assets Memory track]: asset-db-plugin-register: project start:78.41MB, end 207.41MB, increase: 128.99MB
2024-7-10 19:44:32-debug: [Assets Memory track]: asset-db:worker-init: initPlugin start:77.69MB, end 207.43MB, increase: 129.74MB
2024-7-10 19:44:32-debug: asset-db:worker-init: initPlugin (1552ms)
2024-7-10 19:44:32-debug: [Assets Memory track]: asset-db:worker-init start:24.38MB, end 207.50MB, increase: 183.12MB
2024-7-10 19:44:32-debug: Run asset db hook engine-extends:beforePreStart ...
2024-7-10 19:44:32-debug: Run asset db hook programming:beforePreStart ...
2024-7-10 19:44:32-debug: Run asset db hook programming:beforePreStart success!
2024-7-10 19:44:32-debug: Run asset db hook engine-extends:beforePreStart success!
2024-7-10 19:44:32-debug: asset-db:worker-init (3887ms)
2024-7-10 19:44:32-debug: asset-db-hook-programming-beforePreStart (190ms)
2024-7-10 19:44:32-debug: asset-db-hook-engine-extends-beforePreStart (190ms)
2024-7-10 19:44:32-debug: Preimport db internal success
2024-7-10 19:44:32-debug: %cImport%c: D:\TankFight\TK2\assets\text\tank0.tsbackground: #aaff85; color: #000;color: #000;
2024-7-10 19:44:32-debug: Preimport db assets success
2024-7-10 19:44:32-debug: Run asset db hook programming:afterPreStart ...
2024-7-10 19:44:32-debug: starting packer-driver...
2024-7-10 19:44:32-debug: initialize scripting environment...
2024-7-10 19:44:32-debug: Set detail map pack:///resolution-detail-map.json: {}
2024-7-10 19:44:32-debug: Run asset db hook engine-extends:afterPreStart ...
2024-7-10 19:44:32-debug: Run asset db hook programming:afterPreStart success!
2024-7-10 19:44:32-debug: Run asset db hook engine-extends:afterPreStart success!
2024-7-10 19:44:32-debug: Start up the 'internal' database...
2024-7-10 19:44:33-debug: asset-db-hook-programming-afterPreStart (844ms)
2024-7-10 19:44:33-debug: asset-db:worker-effect-data-processing (258ms)
2024-7-10 19:44:33-debug: asset-db-hook-engine-extends-afterPreStart (258ms)
2024-7-10 19:44:33-debug: [Assets Memory track]: asset-db:worker-startup-database[internal] start:207.55MB, end 217.79MB, increase: 10.23MB
2024-7-10 19:44:33-debug: Start up the 'assets' database...
2024-7-10 19:44:33-debug: asset-db:worker-startup-database[internal] (1241ms)
2024-7-10 19:44:33-debug: [Assets Memory track]: asset-db:worker-startup-database[assets] start:208.86MB, end 220.79MB, increase: 11.93MB
2024-7-10 19:44:33-debug: [Assets Memory track]: asset-db:worker-init: startup start:207.62MB, end 220.80MB, increase: 13.18MB
2024-7-10 19:44:33-debug: lazy register asset handler directory
2024-7-10 19:44:33-debug: lazy register asset handler text
2024-7-10 19:44:33-debug: lazy register asset handler json
2024-7-10 19:44:33-debug: lazy register asset handler spine-data
2024-7-10 19:44:33-debug: lazy register asset handler dragonbones
2024-7-10 19:44:33-debug: lazy register asset handler terrain
2024-7-10 19:44:33-debug: lazy register asset handler dragonbones-atlas
2024-7-10 19:44:33-debug: lazy register asset handler *
2024-7-10 19:44:33-debug: lazy register asset handler javascript
2024-7-10 19:44:33-debug: lazy register asset handler typescript
2024-7-10 19:44:33-debug: lazy register asset handler scene
2024-7-10 19:44:33-debug: lazy register asset handler sprite-frame
2024-7-10 19:44:33-debug: lazy register asset handler prefab
2024-7-10 19:44:33-debug: lazy register asset handler buffer
2024-7-10 19:44:33-debug: lazy register asset handler tiled-map
2024-7-10 19:44:33-debug: lazy register asset handler sign-image
2024-7-10 19:44:33-debug: lazy register asset handler alpha-image
2024-7-10 19:44:33-debug: lazy register asset handler texture
2024-7-10 19:44:33-debug: lazy register asset handler texture-cube
2024-7-10 19:44:33-debug: lazy register asset handler erp-texture-cube
2024-7-10 19:44:33-debug: lazy register asset handler render-texture
2024-7-10 19:44:33-debug: lazy register asset handler image
2024-7-10 19:44:33-debug: lazy register asset handler texture-cube-face
2024-7-10 19:44:33-debug: lazy register asset handler rt-sprite-frame
2024-7-10 19:44:33-debug: lazy register asset handler gltf
2024-7-10 19:44:33-debug: lazy register asset handler gltf-animation
2024-7-10 19:44:33-debug: lazy register asset handler gltf-mesh
2024-7-10 19:44:33-debug: lazy register asset handler gltf-skeleton
2024-7-10 19:44:33-debug: lazy register asset handler gltf-scene
2024-7-10 19:44:33-debug: lazy register asset handler gltf-material
2024-7-10 19:44:33-debug: lazy register asset handler gltf-embeded-image
2024-7-10 19:44:33-debug: lazy register asset handler fbx
2024-7-10 19:44:33-debug: lazy register asset handler material
2024-7-10 19:44:33-debug: lazy register asset handler physics-material
2024-7-10 19:44:33-debug: lazy register asset handler effect
2024-7-10 19:44:33-debug: lazy register asset handler effect-header
2024-7-10 19:44:33-debug: lazy register asset handler audio-clip
2024-7-10 19:44:33-debug: lazy register asset handler animation-clip
2024-7-10 19:44:33-debug: lazy register asset handler animation-graph
2024-7-10 19:44:33-debug: lazy register asset handler animation-graph-variant
2024-7-10 19:44:33-debug: lazy register asset handler animation-mask
2024-7-10 19:44:33-debug: lazy register asset handler ttf-font
2024-7-10 19:44:33-debug: lazy register asset handler bitmap-font
2024-7-10 19:44:33-debug: lazy register asset handler particle
2024-7-10 19:44:33-debug: lazy register asset handler sprite-atlas
2024-7-10 19:44:33-debug: lazy register asset handler auto-atlas
2024-7-10 19:44:33-debug: lazy register asset handler label-atlas
2024-7-10 19:44:33-debug: lazy register asset handler render-pipeline
2024-7-10 19:44:33-debug: lazy register asset handler render-stage
2024-7-10 19:44:33-debug: lazy register asset handler render-flow
2024-7-10 19:44:33-debug: lazy register asset handler instantiation-material
2024-7-10 19:44:33-debug: lazy register asset handler instantiation-mesh
2024-7-10 19:44:33-debug: lazy register asset handler instantiation-skeleton
2024-7-10 19:44:33-debug: lazy register asset handler instantiation-animation
2024-7-10 19:44:33-debug: lazy register asset handler video-clip
2024-7-10 19:44:33-debug: asset-db:worker-startup-database[assets] (1049ms)
2024-7-10 19:44:33-debug: asset-db:start-database (1306ms)
2024-7-10 19:44:33-debug: asset-db:ready (7359ms)
2024-7-10 19:44:33-debug: init worker message success
2024-7-10 19:44:33-debug: programming:execute-script (2ms)
2024-7-10 19:44:33-debug: [Build Memory track]: builder:worker-init start:220.37MB, end 231.17MB, increase: 10.80MB
2024-7-10 19:44:33-debug: builder:worker-init (510ms)
2024-7-11 04:29:05-warn: 为更好地打开脚本，请在 {preferences} -> {program} -> {scriptEditor} 里配置打开脚本的应用程序
