2024-7-10 08:30:46-log: Cannot access game frame or container.
2024-7-10 08:30:46-debug: asset-db:require-engine-code (897ms)
2024-7-10 08:30:46-log: meshopt wasm decoder initialized
2024-7-10 08:30:46-log: [box2d]:box2d wasm lib loaded.
2024-7-10 08:30:46-log: [bullet]:bullet wasm lib loaded.
2024-7-10 08:30:47-log: Cocos Creator v3.8.3
2024-7-10 08:30:47-debug: [Assets Memory track]: asset-db:worker-init: initEngine start:24.14MB, end 78.05MB, increase: 53.91MB
2024-7-10 08:30:48-debug: [Assets Memory track]: asset-db-plugin-register: builder start:82.39MB, end 196.17MB, increase: 113.78MB
2024-7-10 08:30:47-debug: [Assets Memory track]: asset-db-plugin-register: programming start:78.80MB, end 82.38MB, increase: 3.58MB
2024-7-10 08:30:48-debug: [Assets Memory track]: asset-db-plugin-register: engine-extends start:196.40MB, end 199.53MB, increase: 3.13MB
2024-7-10 08:30:48-debug: [Assets Memory track]: asset-db-plugin-register: project start:78.67MB, end 199.59MB, increase: 120.92MB
2024-7-10 08:30:48-debug: [Assets Memory track]: asset-db:worker-init: initPlugin start:78.05MB, end 199.61MB, increase: 121.56MB
2024-7-10 08:30:48-debug: run package(cocos-service) handler(enable) start
2024-7-10 08:30:48-debug: run package(cocos-service) handler(enable) success!
2024-7-10 08:30:48-debug: run package(im-plugin) handler(enable) success!
2024-7-10 08:30:48-debug: run package(im-plugin) handler(enable) start
2024-7-10 08:30:48-debug: run package(blank-template) handler(enable) start
2024-7-10 08:30:48-debug: run package(blank-template) handler(enable) success!
2024-7-10 08:30:48-debug: run package(placeholder) handler(enable) success!
2024-7-10 08:30:48-debug: run package(placeholder) handler(enable) start
2024-7-10 08:30:48-debug: asset-db:worker-init: initPlugin (1188ms)
2024-7-10 08:30:48-debug: [Assets Memory track]: asset-db:worker-init start:24.13MB, end 194.88MB, increase: 170.75MB
2024-7-10 08:30:48-debug: Run asset db hook engine-extends:beforePreStart ...
2024-7-10 08:30:48-debug: Run asset db hook programming:beforePreStart success!
2024-7-10 08:30:48-debug: Run asset db hook engine-extends:beforePreStart success!
2024-7-10 08:30:48-debug: Run asset db hook programming:beforePreStart ...
2024-7-10 08:30:49-debug: asset-db:worker-init (3136ms)
2024-7-10 08:30:49-debug: asset-db-hook-programming-beforePreStart (155ms)
2024-7-10 08:30:49-debug: asset-db-hook-engine-extends-beforePreStart (154ms)
2024-7-10 08:30:49-debug: Preimport db internal success
2024-7-10 08:30:49-debug: Preimport db assets success
2024-7-10 08:30:49-debug: Run asset db hook programming:afterPreStart ...
2024-7-10 08:30:49-debug: starting packer-driver...
2024-7-10 08:30:49-debug: initialize scripting environment...
2024-7-10 08:30:49-debug: Set detail map pack:///resolution-detail-map.json: {}
2024-7-10 08:30:49-debug: Run asset db hook programming:afterPreStart success!
2024-7-10 08:30:49-debug: Run asset db hook engine-extends:afterPreStart ...
2024-7-10 08:30:49-debug: Run asset db hook engine-extends:afterPreStart success!
2024-7-10 08:30:49-debug: [Assets Memory track]: asset-db:worker-init: preStart start:194.89MB, end 197.78MB, increase: 2.89MB
2024-7-10 08:30:49-debug: Start up the 'internal' database...
2024-7-10 08:30:49-debug: asset-db-hook-programming-afterPreStart (656ms)
2024-7-10 08:30:49-debug: asset-db-hook-engine-extends-afterPreStart (248ms)
2024-7-10 08:30:49-debug: asset-db:worker-effect-data-processing (248ms)
2024-7-10 08:30:49-debug: [Assets Memory track]: asset-db:worker-startup-database[internal] start:194.94MB, end 209.18MB, increase: 14.24MB
2024-7-10 08:30:49-debug: Start up the 'assets' database...
2024-7-10 08:30:49-debug: asset-db:worker-startup-database[internal] (989ms)
2024-7-10 08:30:49-debug: [Assets Memory track]: asset-db:worker-startup-database[assets] start:200.22MB, end 212.27MB, increase: 12.06MB
2024-7-10 08:30:49-debug: lazy register asset handler directory
2024-7-10 08:30:49-debug: [Assets Memory track]: asset-db:worker-init: startup start:197.78MB, end 212.28MB, increase: 14.50MB
2024-7-10 08:30:49-debug: lazy register asset handler *
2024-7-10 08:30:49-debug: lazy register asset handler text
2024-7-10 08:30:49-debug: lazy register asset handler spine-data
2024-7-10 08:30:49-debug: lazy register asset handler dragonbones
2024-7-10 08:30:49-debug: lazy register asset handler dragonbones-atlas
2024-7-10 08:30:49-debug: lazy register asset handler json
2024-7-10 08:30:49-debug: lazy register asset handler terrain
2024-7-10 08:30:49-debug: lazy register asset handler javascript
2024-7-10 08:30:49-debug: lazy register asset handler typescript
2024-7-10 08:30:49-debug: lazy register asset handler sprite-frame
2024-7-10 08:30:49-debug: lazy register asset handler prefab
2024-7-10 08:30:49-debug: lazy register asset handler tiled-map
2024-7-10 08:30:49-debug: lazy register asset handler scene
2024-7-10 08:30:49-debug: lazy register asset handler image
2024-7-10 08:30:49-debug: lazy register asset handler buffer
2024-7-10 08:30:49-debug: lazy register asset handler sign-image
2024-7-10 08:30:49-debug: lazy register asset handler alpha-image
2024-7-10 08:30:49-debug: lazy register asset handler texture-cube
2024-7-10 08:30:49-debug: lazy register asset handler erp-texture-cube
2024-7-10 08:30:49-debug: lazy register asset handler texture
2024-7-10 08:30:49-debug: lazy register asset handler render-texture
2024-7-10 08:30:49-debug: lazy register asset handler texture-cube-face
2024-7-10 08:30:49-debug: lazy register asset handler gltf
2024-7-10 08:30:49-debug: lazy register asset handler rt-sprite-frame
2024-7-10 08:30:49-debug: lazy register asset handler gltf-mesh
2024-7-10 08:30:49-debug: lazy register asset handler gltf-material
2024-7-10 08:30:49-debug: lazy register asset handler gltf-animation
2024-7-10 08:30:49-debug: lazy register asset handler gltf-skeleton
2024-7-10 08:30:49-debug: lazy register asset handler gltf-embeded-image
2024-7-10 08:30:49-debug: lazy register asset handler gltf-scene
2024-7-10 08:30:49-debug: lazy register asset handler fbx
2024-7-10 08:30:49-debug: lazy register asset handler material
2024-7-10 08:30:49-debug: lazy register asset handler physics-material
2024-7-10 08:30:49-debug: lazy register asset handler effect
2024-7-10 08:30:49-debug: lazy register asset handler effect-header
2024-7-10 08:30:49-debug: lazy register asset handler audio-clip
2024-7-10 08:30:49-debug: lazy register asset handler animation-clip
2024-7-10 08:30:49-debug: lazy register asset handler animation-graph
2024-7-10 08:30:49-debug: lazy register asset handler animation-graph-variant
2024-7-10 08:30:49-debug: lazy register asset handler animation-mask
2024-7-10 08:30:49-debug: lazy register asset handler ttf-font
2024-7-10 08:30:49-debug: lazy register asset handler bitmap-font
2024-7-10 08:30:49-debug: lazy register asset handler sprite-atlas
2024-7-10 08:30:49-debug: lazy register asset handler particle
2024-7-10 08:30:49-debug: lazy register asset handler auto-atlas
2024-7-10 08:30:49-debug: lazy register asset handler label-atlas
2024-7-10 08:30:49-debug: lazy register asset handler render-pipeline
2024-7-10 08:30:50-debug: lazy register asset handler render-flow
2024-7-10 08:30:50-debug: lazy register asset handler render-stage
2024-7-10 08:30:50-debug: lazy register asset handler instantiation-material
2024-7-10 08:30:50-debug: lazy register asset handler instantiation-animation
2024-7-10 08:30:50-debug: lazy register asset handler instantiation-mesh
2024-7-10 08:30:50-debug: lazy register asset handler instantiation-skeleton
2024-7-10 08:30:50-debug: lazy register asset handler video-clip
2024-7-10 08:30:50-debug: asset-db:worker-startup-database[assets] (835ms)
2024-7-10 08:30:50-debug: asset-db:start-database (1048ms)
2024-7-10 08:30:50-debug: asset-db:ready (5998ms)
2024-7-10 08:30:50-debug: init worker message success
2024-7-10 08:30:50-debug: programming:execute-script (4ms)
2024-7-10 08:30:50-debug: [Build Memory track]: builder:worker-init start:211.43MB, end 222.37MB, increase: 10.94MB
2024-7-10 08:30:50-debug: builder:worker-init (519ms)
2024-7-10 08:31:34-debug: refresh db internal success
2024-7-10 08:31:35-debug: %cImport%c: D:\TankFight\TK2\assets\Scripts\welcome.tsbackground: #aaff85; color: #000;color: #000;
2024-7-10 08:31:35-debug: refresh db assets success
2024-7-10 08:31:35-debug: Run asset db hook engine-extends:afterRefresh ...
2024-7-10 08:31:35-debug: Run asset db hook engine-extends:afterRefresh success!
2024-7-10 08:31:35-debug: asset-db:refresh-all-database (186ms)
2024-7-10 08:31:35-debug: asset-db:worker-effect-data-processing (1ms)
2024-7-10 08:31:35-debug: asset-db-hook-engine-extends-afterRefresh (2ms)
2024-7-10 08:45:39-debug: refresh db internal success
2024-7-10 08:45:39-debug: refresh db assets success
2024-7-10 08:45:39-debug: Run asset db hook engine-extends:afterRefresh ...
2024-7-10 08:45:39-debug: Run asset db hook engine-extends:afterRefresh success!
2024-7-10 08:45:39-debug: asset-db:refresh-all-database (229ms)
2024-7-10 08:45:39-debug: asset-db-hook-engine-extends-afterRefresh (1ms)
2024-7-10 08:46:30-debug: refresh db internal success
2024-7-10 08:46:30-debug: %cImport%c: D:\TankFight\TK2\assets\Scripts\esc.tsbackground: #aaff85; color: #000;color: #000;
2024-7-10 08:46:30-debug: refresh db assets success
2024-7-10 08:46:30-debug: Run asset db hook engine-extends:afterRefresh ...
2024-7-10 08:46:30-debug: Run asset db hook engine-extends:afterRefresh success!
2024-7-10 08:46:30-debug: asset-db:refresh-all-database (199ms)
2024-7-10 08:46:30-debug: asset-db:worker-effect-data-processing (1ms)
2024-7-10 08:46:30-debug: asset-db-hook-engine-extends-afterRefresh (1ms)
2024-7-10 08:49:11-debug: refresh db internal success
2024-7-10 08:49:11-debug: %cImport%c: D:\TankFight\TK2\assets\Scripts\esc.tsbackground: #aaff85; color: #000;color: #000;
2024-7-10 08:49:11-debug: %cImport%c: D:\TankFight\TK2\assets\text\victory.tsbackground: #aaff85; color: #000;color: #000;
2024-7-10 08:49:11-debug: refresh db assets success
2024-7-10 08:49:11-debug: Run asset db hook engine-extends:afterRefresh ...
2024-7-10 08:49:11-debug: Run asset db hook engine-extends:afterRefresh success!
2024-7-10 08:49:11-debug: asset-db:refresh-all-database (186ms)
2024-7-10 08:49:11-debug: asset-db:worker-effect-data-processing (1ms)
2024-7-10 08:49:11-debug: asset-db-hook-engine-extends-afterRefresh (1ms)
2024-7-10 08:49:12-debug: start refresh asset from D:\TankFight\TK2\assets\map\alonemap2.scene...
2024-7-10 08:49:12-debug: %cImport%c: D:\TankFight\TK2\assets\map\alonemap2.scenebackground: #aaff85; color: #000;color: #000;
2024-7-10 08:49:12-debug: refresh asset D:\TankFight\TK2\assets\map success
2024-7-10 08:49:12-debug: start refresh asset from D:\TankFight\TK2\assets\map\alonemap2.scene...
2024-7-10 08:49:12-debug: %cImport%c: D:\TankFight\TK2\assets\map\alonemap2.scenebackground: #aaff85; color: #000;color: #000;
2024-7-10 08:49:12-debug: refresh asset D:\TankFight\TK2\assets\map success
