2024-7-11 08:18:23-log: Cannot access game frame or container.
2024-7-11 08:18:28-debug: asset-db:require-engine-code (5211ms)
2024-7-11 08:18:30-log: meshopt wasm decoder initialized
2024-7-11 08:18:31-log: [box2d]:box2d wasm lib loaded.
2024-7-11 08:18:31-log: [bullet]:bullet wasm lib loaded.
2024-7-11 08:18:31-log: Cocos Creator v3.8.3
2024-7-11 08:18:32-debug: [Assets Memory track]: asset-db-plugin-register: builder start:80.73MB, end 172.57MB, increase: 91.84MB
2024-7-11 08:18:31-debug: [Assets Memory track]: asset-db:worker-init: initEngine start:28.16MB, end 77.48MB, increase: 49.32MB
2024-7-11 08:18:31-debug: [Assets Memory track]: asset-db-plugin-register: programming start:77.67MB, end 80.71MB, increase: 3.05MB
2024-7-11 08:18:32-debug: [Assets Memory track]: asset-db-plugin-register: project start:78.10MB, end 168.55MB, increase: 90.45MB
2024-7-11 08:18:32-debug: [Assets Memory track]: asset-db:worker-init: initPlugin start:77.48MB, end 168.57MB, increase: 91.08MB
2024-7-11 08:18:32-debug: asset-db:worker-init: initPlugin (1360ms)
2024-7-11 08:18:32-debug: [Assets Memory track]: asset-db:worker-init start:28.15MB, end 168.63MB, increase: 140.47MB
2024-7-11 08:18:32-debug: Run asset db hook programming:beforePreStart ...
2024-7-11 08:18:32-debug: Run asset db hook engine-extends:beforePreStart success!
2024-7-11 08:18:32-debug: Run asset db hook programming:beforePreStart success!
2024-7-11 08:18:32-debug: Run asset db hook engine-extends:beforePreStart ...
2024-7-11 08:18:33-debug: asset-db:worker-init (10729ms)
2024-7-11 08:18:33-debug: asset-db-hook-programming-beforePreStart (887ms)
2024-7-11 08:18:33-debug: asset-db-hook-engine-extends-beforePreStart (886ms)
2024-7-11 08:18:33-debug: Preimport db internal success
2024-7-11 08:18:34-debug: Preimport db assets success
2024-7-11 08:18:34-debug: Run asset db hook programming:afterPreStart ...
2024-7-11 08:18:34-debug: starting packer-driver...
2024-7-11 08:18:34-debug: initialize scripting environment...
2024-7-11 08:18:34-debug: Set detail map pack:///resolution-detail-map.json: {}
2024-7-11 08:18:34-debug: Run asset db hook engine-extends:afterPreStart success!
2024-7-11 08:18:34-debug: Run asset db hook engine-extends:afterPreStart ...
2024-7-11 08:18:34-debug: [Assets Memory track]: asset-db:worker-init: preStart start:168.63MB, end 171.46MB, increase: 2.83MB
2024-7-11 08:18:34-debug: Start up the 'internal' database...
2024-7-11 08:18:34-debug: Run asset db hook programming:afterPreStart success!
2024-7-11 08:18:35-debug: asset-db-hook-programming-afterPreStart (1175ms)
2024-7-11 08:18:35-debug: asset-db:worker-effect-data-processing (681ms)
2024-7-11 08:18:35-debug: asset-db-hook-engine-extends-afterPreStart (681ms)
2024-7-11 08:18:35-debug: [Assets Memory track]: asset-db:worker-startup-database[internal] start:168.68MB, end 183.37MB, increase: 14.68MB
2024-7-11 08:18:35-debug: Start up the 'assets' database...
2024-7-11 08:18:35-debug: asset-db:worker-startup-database[internal] (3111ms)
2024-7-11 08:18:35-debug: [Assets Memory track]: asset-db:worker-startup-database[assets] start:173.46MB, end 181.37MB, increase: 7.91MB
2024-7-11 08:18:35-debug: [Assets Memory track]: asset-db:worker-init: startup start:171.46MB, end 181.38MB, increase: 9.91MB
2024-7-11 08:18:35-debug: lazy register asset handler *
2024-7-11 08:18:35-debug: lazy register asset handler directory
2024-7-11 08:18:35-debug: lazy register asset handler text
2024-7-11 08:18:35-debug: lazy register asset handler spine-data
2024-7-11 08:18:35-debug: lazy register asset handler dragonbones
2024-7-11 08:18:35-debug: lazy register asset handler json
2024-7-11 08:18:35-debug: lazy register asset handler dragonbones-atlas
2024-7-11 08:18:35-debug: lazy register asset handler typescript
2024-7-11 08:18:35-debug: lazy register asset handler javascript
2024-7-11 08:18:35-debug: lazy register asset handler prefab
2024-7-11 08:18:35-debug: lazy register asset handler terrain
2024-7-11 08:18:35-debug: lazy register asset handler sprite-frame
2024-7-11 08:18:35-debug: lazy register asset handler tiled-map
2024-7-11 08:18:35-debug: lazy register asset handler scene
2024-7-11 08:18:35-debug: lazy register asset handler image
2024-7-11 08:18:35-debug: lazy register asset handler buffer
2024-7-11 08:18:35-debug: lazy register asset handler sign-image
2024-7-11 08:18:35-debug: lazy register asset handler alpha-image
2024-7-11 08:18:35-debug: lazy register asset handler texture
2024-7-11 08:18:35-debug: lazy register asset handler texture-cube
2024-7-11 08:18:35-debug: lazy register asset handler erp-texture-cube
2024-7-11 08:18:35-debug: lazy register asset handler render-texture
2024-7-11 08:18:35-debug: lazy register asset handler texture-cube-face
2024-7-11 08:18:35-debug: lazy register asset handler gltf
2024-7-11 08:18:35-debug: lazy register asset handler gltf-mesh
2024-7-11 08:18:35-debug: lazy register asset handler gltf-animation
2024-7-11 08:18:35-debug: lazy register asset handler rt-sprite-frame
2024-7-11 08:18:35-debug: lazy register asset handler gltf-scene
2024-7-11 08:18:35-debug: lazy register asset handler gltf-material
2024-7-11 08:18:35-debug: lazy register asset handler gltf-embeded-image
2024-7-11 08:18:35-debug: lazy register asset handler fbx
2024-7-11 08:18:35-debug: lazy register asset handler material
2024-7-11 08:18:35-debug: lazy register asset handler gltf-skeleton
2024-7-11 08:18:35-debug: lazy register asset handler physics-material
2024-7-11 08:18:35-debug: lazy register asset handler effect
2024-7-11 08:18:35-debug: lazy register asset handler effect-header
2024-7-11 08:18:35-debug: lazy register asset handler audio-clip
2024-7-11 08:18:35-debug: lazy register asset handler animation-clip
2024-7-11 08:18:35-debug: lazy register asset handler animation-graph
2024-7-11 08:18:35-debug: lazy register asset handler animation-graph-variant
2024-7-11 08:18:35-debug: lazy register asset handler ttf-font
2024-7-11 08:18:35-debug: lazy register asset handler animation-mask
2024-7-11 08:18:35-debug: lazy register asset handler bitmap-font
2024-7-11 08:18:35-debug: lazy register asset handler particle
2024-7-11 08:18:35-debug: lazy register asset handler sprite-atlas
2024-7-11 08:18:35-debug: lazy register asset handler label-atlas
2024-7-11 08:18:35-debug: lazy register asset handler render-pipeline
2024-7-11 08:18:35-debug: lazy register asset handler render-stage
2024-7-11 08:18:35-debug: lazy register asset handler render-flow
2024-7-11 08:18:35-debug: lazy register asset handler auto-atlas
2024-7-11 08:18:35-debug: lazy register asset handler instantiation-material
2024-7-11 08:18:35-debug: lazy register asset handler instantiation-mesh
2024-7-11 08:18:35-debug: lazy register asset handler instantiation-skeleton
2024-7-11 08:18:35-debug: lazy register asset handler video-clip
2024-7-11 08:18:35-debug: lazy register asset handler instantiation-animation
2024-7-11 08:18:35-debug: asset-db:worker-startup-database[assets] (1891ms)
2024-7-11 08:18:35-debug: asset-db:start-database (3198ms)
2024-7-11 08:18:35-debug: asset-db:ready (15582ms)
2024-7-11 08:18:35-debug: init worker message success
2024-7-11 08:18:36-debug: [Build Memory track]: builder:worker-init start:184.89MB, end 193.90MB, increase: 9.01MB
2024-7-11 08:18:36-debug: programming:execute-script (965ms)
2024-7-11 08:18:36-debug: builder:worker-init (964ms)
2024-7-11 08:31:25-debug: refresh db internal success
2024-7-11 08:31:25-debug: %cImport%c: D:\TankFight\TK2\assets\Scripts\log.tsbackground: #aaff85; color: #000;color: #000;
2024-7-11 08:31:25-debug: %cImport%c: D:\TankFight\TK2\assets\Scripts\select.tsbackground: #aaff85; color: #000;color: #000;
2024-7-11 08:31:25-debug: refresh db assets success
2024-7-11 08:31:25-debug: Run asset db hook engine-extends:afterRefresh ...
2024-7-11 08:31:25-debug: Run asset db hook engine-extends:afterRefresh success!
2024-7-11 08:31:25-debug: asset-db:refresh-all-database (249ms)
2024-7-11 08:31:25-debug: asset-db:worker-effect-data-processing (2ms)
2024-7-11 08:31:25-debug: asset-db-hook-engine-extends-afterRefresh (4ms)
2024-7-11 08:31:37-debug: Query all assets info in project
2024-7-11 08:31:37-debug: init custom config: keepNodeUuid: false, useCache: true
2024-7-11 08:31:37-debug: 查询 Asset Bundle start, progress: 0%
2024-7-11 08:31:37-debug: // ---- build task 查询 Asset Bundle ----
2024-7-11 08:31:37-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,871c3b6c-7379-419d-bda3-794b239ab90d
2024-7-11 08:31:37-debug:   Number of all scenes: 9
2024-7-11 08:31:37-debug:   Number of all scripts: 40
2024-7-11 08:31:37-debug:   Number of other assets: 568
2024-7-11 08:31:37-debug: // ---- build task 查询 Asset Bundle ---- (7ms)
2024-7-11 08:31:37-debug: run build task 查询 Asset Bundle success in 7 ms√, progress: 5%
2024-7-11 08:31:37-debug: [Build Memory track]: 查询 Asset Bundle start:166.56MB, end 166.51MB, increase: -50.85KB
2024-7-11 08:31:37-debug: 查询 Asset Bundle start, progress: 5%
2024-7-11 08:31:37-debug: // ---- build task 查询 Asset Bundle ----
2024-7-11 08:31:37-debug: // ---- build task 查询 Asset Bundle ---- (1ms)
2024-7-11 08:31:37-debug: run build task 查询 Asset Bundle success in 1 ms√, progress: 10%
2024-7-11 08:31:37-debug: [Build Memory track]: 查询 Asset Bundle start:166.54MB, end 166.65MB, increase: 116.64KB
2024-7-11 08:31:37-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-7-11 08:31:37-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-7-11 08:31:37-debug: run build task 整理部分构建选项内数据到 settings.json success in √, progress: 12%
2024-7-11 08:31:37-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-7-11 08:31:37-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:166.66MB, end 166.68MB, increase: 11.72KB
2024-7-11 08:31:37-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-7-11 08:31:37-debug: run build task 填充脚本数据到 settings.json success in √, progress: 13%
2024-7-11 08:31:37-debug: [Build Memory track]: 填充脚本数据到 settings.json start:166.69MB, end 166.70MB, increase: 11.67KB
2024-7-11 08:31:37-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-7-11 08:31:37-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-7-11 08:31:37-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (3ms)
2024-7-11 08:31:37-debug: run build task 整理部分构建选项内数据到 settings.json success in 3 ms√, progress: 15%
2024-7-11 08:31:37-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:166.72MB, end 166.84MB, increase: 130.67KB
2024-7-11 08:33:31-debug: refresh db internal success
2024-7-11 08:33:31-debug: %cImport%c: D:\TankFight\TK2\assets\Scripts\log.tsbackground: #aaff85; color: #000;color: #000;
2024-7-11 08:33:31-debug: refresh db assets success
2024-7-11 08:33:31-debug: Run asset db hook engine-extends:afterRefresh ...
2024-7-11 08:33:31-debug: Run asset db hook engine-extends:afterRefresh success!
2024-7-11 08:33:31-debug: asset-db:refresh-all-database (190ms)
2024-7-11 08:33:31-debug: asset-db:worker-effect-data-processing (1ms)
2024-7-11 08:33:31-debug: asset-db-hook-engine-extends-afterRefresh (1ms)
2024-7-11 08:33:40-debug: refresh db internal success
2024-7-11 08:33:40-debug: %cImport%c: D:\TankFight\TK2\assets\Scripts\log.tsbackground: #aaff85; color: #000;color: #000;
2024-7-11 08:33:40-debug: Run asset db hook engine-extends:afterRefresh ...
2024-7-11 08:33:40-debug: refresh db assets success
2024-7-11 08:33:40-debug: Run asset db hook engine-extends:afterRefresh success!
2024-7-11 08:33:40-debug: asset-db:refresh-all-database (175ms)
2024-7-11 08:33:43-debug: Query all assets info in project
2024-7-11 08:33:43-debug: init custom config: keepNodeUuid: false, useCache: true
2024-7-11 08:33:43-debug: 查询 Asset Bundle start, progress: 0%
2024-7-11 08:33:43-debug: // ---- build task 查询 Asset Bundle ----
2024-7-11 08:33:43-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,871c3b6c-7379-419d-bda3-794b239ab90d
2024-7-11 08:33:43-debug:   Number of all scenes: 9
2024-7-11 08:33:43-debug:   Number of other assets: 568
2024-7-11 08:33:43-debug:   Number of all scripts: 40
2024-7-11 08:33:43-debug: run build task 查询 Asset Bundle success in 4 ms√, progress: 5%
2024-7-11 08:33:43-debug: // ---- build task 查询 Asset Bundle ---- (4ms)
2024-7-11 08:33:43-debug: [Build Memory track]: 查询 Asset Bundle start:170.08MB, end 169.93MB, increase: -148.25KB
2024-7-11 08:33:43-debug: 查询 Asset Bundle start, progress: 5%
2024-7-11 08:33:43-debug: // ---- build task 查询 Asset Bundle ----
2024-7-11 08:33:43-debug: // ---- build task 查询 Asset Bundle ---- (2ms)
2024-7-11 08:33:43-debug: run build task 查询 Asset Bundle success in 2 ms√, progress: 10%
2024-7-11 08:33:43-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-7-11 08:33:43-debug: [Build Memory track]: 查询 Asset Bundle start:169.95MB, end 170.06MB, increase: 116.17KB
2024-7-11 08:33:43-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-7-11 08:33:43-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (1ms)
2024-7-11 08:33:43-debug: run build task 整理部分构建选项内数据到 settings.json success in 1 ms√, progress: 12%
2024-7-11 08:33:43-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:170.07MB, end 170.09MB, increase: 15.07KB
2024-7-11 08:33:43-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-7-11 08:33:43-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-7-11 08:33:43-debug: run build task 填充脚本数据到 settings.json success in 1 ms√, progress: 13%
2024-7-11 08:33:43-debug: [Build Memory track]: 填充脚本数据到 settings.json start:170.10MB, end 170.12MB, increase: 14.89KB
2024-7-11 08:33:43-debug: // ---- build task 填充脚本数据到 settings.json ---- (1ms)
2024-7-11 08:33:43-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-7-11 08:33:43-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-7-11 08:33:43-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (2ms)
2024-7-11 08:33:43-debug: run build task 整理部分构建选项内数据到 settings.json success in 2 ms√, progress: 15%
2024-7-11 08:33:43-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:170.13MB, end 169.42MB, increase: -724.67KB
2024-7-11 08:34:09-debug: refresh db internal success
2024-7-11 08:34:09-debug: refresh db assets success
2024-7-11 08:34:09-debug: Run asset db hook engine-extends:afterRefresh ...
2024-7-11 08:34:09-debug: Run asset db hook engine-extends:afterRefresh success!
2024-7-11 08:34:09-debug: asset-db:refresh-all-database (177ms)
2024-7-11 08:34:09-debug: asset-db:worker-effect-data-processing (1ms)
2024-7-11 08:34:09-debug: asset-db-hook-engine-extends-afterRefresh (1ms)
2024-7-11 08:35:51-debug: refresh db internal success
2024-7-11 08:35:51-debug: %cImport%c: D:\TankFight\TK2\assets\Scripts\select.tsbackground: #aaff85; color: #000;color: #000;
2024-7-11 08:35:51-debug: refresh db assets success
2024-7-11 08:35:51-debug: Run asset db hook engine-extends:afterRefresh ...
2024-7-11 08:35:51-debug: Run asset db hook engine-extends:afterRefresh success!
2024-7-11 08:35:51-debug: asset-db:refresh-all-database (186ms)
2024-7-11 08:35:51-debug: asset-db:worker-effect-data-processing (1ms)
2024-7-11 08:35:51-debug: asset-db-hook-engine-extends-afterRefresh (2ms)
2024-7-11 08:35:54-debug: Query all assets info in project
2024-7-11 08:35:54-debug: init custom config: keepNodeUuid: false, useCache: true
2024-7-11 08:35:54-debug: 查询 Asset Bundle start, progress: 0%
2024-7-11 08:35:54-debug: // ---- build task 查询 Asset Bundle ----
2024-7-11 08:35:54-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,871c3b6c-7379-419d-bda3-794b239ab90d
2024-7-11 08:35:54-debug:   Number of all scenes: 9
2024-7-11 08:35:54-debug:   Number of all scripts: 40
2024-7-11 08:35:54-debug:   Number of other assets: 568
2024-7-11 08:35:54-debug: // ---- build task 查询 Asset Bundle ---- (4ms)
2024-7-11 08:35:54-debug: run build task 查询 Asset Bundle success in 4 ms√, progress: 5%
2024-7-11 08:35:54-debug: [Build Memory track]: 查询 Asset Bundle start:172.50MB, end 172.37MB, increase: -136.32KB
2024-7-11 08:35:54-debug: // ---- build task 查询 Asset Bundle ----
2024-7-11 08:35:54-debug: 查询 Asset Bundle start, progress: 5%
2024-7-11 08:35:54-debug: // ---- build task 查询 Asset Bundle ---- (1ms)
2024-7-11 08:35:54-debug: run build task 查询 Asset Bundle success in 1 ms√, progress: 10%
2024-7-11 08:35:54-debug: [Build Memory track]: 查询 Asset Bundle start:172.38MB, end 172.49MB, increase: 115.81KB
2024-7-11 08:35:54-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-7-11 08:35:54-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-7-11 08:35:54-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:172.51MB, end 172.52MB, increase: 10.86KB
2024-7-11 08:35:54-debug: run build task 整理部分构建选项内数据到 settings.json success in √, progress: 12%
2024-7-11 08:35:54-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-7-11 08:35:54-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-7-11 08:35:54-debug: [Build Memory track]: 填充脚本数据到 settings.json start:172.53MB, end 172.54MB, increase: 11.12KB
2024-7-11 08:35:54-debug: run build task 填充脚本数据到 settings.json success in √, progress: 13%
2024-7-11 08:35:54-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-7-11 08:35:54-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-7-11 08:35:54-debug: run build task 整理部分构建选项内数据到 settings.json success in 2 ms√, progress: 15%
2024-7-11 08:35:54-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:172.56MB, end 172.68MB, increase: 120.96KB
2024-7-11 08:35:54-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (2ms)
2024-7-11 08:36:25-debug: refresh db internal success
2024-7-11 08:36:25-debug: %cImport%c: D:\TankFight\TK2\assets\Scripts\select.tsbackground: #aaff85; color: #000;color: #000;
2024-7-11 08:36:25-debug: refresh db assets success
2024-7-11 08:36:25-debug: Run asset db hook engine-extends:afterRefresh ...
2024-7-11 08:36:25-debug: Run asset db hook engine-extends:afterRefresh success!
2024-7-11 08:36:25-debug: asset-db:refresh-all-database (180ms)
2024-7-11 08:36:25-debug: asset-db:worker-effect-data-processing (1ms)
2024-7-11 08:36:25-debug: asset-db-hook-engine-extends-afterRefresh (1ms)
2024-7-11 08:36:26-debug: start refresh asset from D:\TankFight\TK2\assets\map\alonemap2.scene...
2024-7-11 08:36:26-debug: %cImport%c: D:\TankFight\TK2\assets\map\alonemap2.scenebackground: #aaff85; color: #000;color: #000;
2024-7-11 08:36:26-debug: refresh asset D:\TankFight\TK2\assets\map success
2024-7-11 08:36:29-debug: Query all assets info in project
2024-7-11 08:36:29-debug: init custom config: keepNodeUuid: false, useCache: true
2024-7-11 08:36:29-debug: 查询 Asset Bundle start, progress: 0%
2024-7-11 08:36:29-debug: // ---- build task 查询 Asset Bundle ----
2024-7-11 08:36:29-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,871c3b6c-7379-419d-bda3-794b239ab90d
2024-7-11 08:36:29-debug:   Number of all scenes: 9
2024-7-11 08:36:29-debug:   Number of all scripts: 40
2024-7-11 08:36:29-debug:   Number of other assets: 568
2024-7-11 08:36:29-debug: // ---- build task 查询 Asset Bundle ---- (6ms)
2024-7-11 08:36:29-debug: run build task 查询 Asset Bundle success in 6 ms√, progress: 5%
2024-7-11 08:36:29-debug: 查询 Asset Bundle start, progress: 5%
2024-7-11 08:36:29-debug: [Build Memory track]: 查询 Asset Bundle start:164.66MB, end 165.42MB, increase: 785.15KB
2024-7-11 08:36:29-debug: // ---- build task 查询 Asset Bundle ----
2024-7-11 08:36:29-debug: // ---- build task 查询 Asset Bundle ---- (3ms)
2024-7-11 08:36:29-debug: run build task 查询 Asset Bundle success in 3 ms√, progress: 10%
2024-7-11 08:36:29-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-7-11 08:36:29-debug: [Build Memory track]: 查询 Asset Bundle start:165.44MB, end 162.00MB, increase: -3522.59KB
2024-7-11 08:36:29-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-7-11 08:36:29-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (1ms)
2024-7-11 08:36:29-debug: run build task 整理部分构建选项内数据到 settings.json success in 1 ms√, progress: 12%
2024-7-11 08:36:29-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:162.03MB, end 162.05MB, increase: 19.64KB
2024-7-11 08:36:29-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-7-11 08:36:29-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-7-11 08:36:29-debug: // ---- build task 填充脚本数据到 settings.json ---- (1ms)
2024-7-11 08:36:29-debug: run build task 填充脚本数据到 settings.json success in 1 ms√, progress: 13%
2024-7-11 08:36:29-debug: [Build Memory track]: 填充脚本数据到 settings.json start:162.06MB, end 162.08MB, increase: 15.77KB
2024-7-11 08:36:29-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-7-11 08:36:29-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-7-11 08:36:29-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (3ms)
2024-7-11 08:36:29-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:162.09MB, end 162.21MB, increase: 123.63KB
2024-7-11 08:36:29-debug: run build task 整理部分构建选项内数据到 settings.json success in 3 ms√, progress: 15%
2024-7-11 08:38:18-debug: refresh db internal success
2024-7-11 08:38:18-debug: Run asset db hook engine-extends:afterRefresh ...
2024-7-11 08:38:18-debug: refresh db assets success
2024-7-11 08:38:18-debug: Run asset db hook engine-extends:afterRefresh success!
2024-7-11 08:38:18-debug: asset-db:refresh-all-database (173ms)
2024-7-11 08:38:18-debug: asset-db:worker-effect-data-processing (1ms)
2024-7-11 08:38:18-debug: asset-db-hook-engine-extends-afterRefresh (1ms)
2024-7-11 08:43:19-debug: refresh db internal success
2024-7-11 08:43:19-debug: %cImport%c: D:\TankFight\TK2\assets\Scripts\PassInf.tsbackground: #aaff85; color: #000;color: #000;
2024-7-11 08:43:19-debug: %cImport%c: D:\TankFight\TK2\assets\Scripts\select.tsbackground: #aaff85; color: #000;color: #000;
2024-7-11 08:43:19-debug: %cImport%c: D:\TankFight\TK2\assets\Scripts\log.tsbackground: #aaff85; color: #000;color: #000;
2024-7-11 08:43:19-debug: refresh db assets success
2024-7-11 08:43:19-debug: Run asset db hook engine-extends:afterRefresh ...
2024-7-11 08:43:19-debug: Run asset db hook engine-extends:afterRefresh success!
2024-7-11 08:43:19-debug: asset-db:refresh-all-database (182ms)
2024-7-11 08:43:19-debug: asset-db-hook-engine-extends-afterRefresh (1ms)
2024-7-11 08:43:22-debug: Query all assets info in project
2024-7-11 08:43:22-debug: init custom config: keepNodeUuid: false, useCache: true
2024-7-11 08:43:22-debug: 查询 Asset Bundle start, progress: 0%
2024-7-11 08:43:22-debug: // ---- build task 查询 Asset Bundle ----
2024-7-11 08:43:22-debug: Query preload assets from cc.config.json: 60f7195c-ec2a-45eb-ba94-8955f60e81d0,1c02ae6f-4492-4915-b8f8-7492a3b1e4cd,810e96e4-e456-4468-9b59-f4e8f39732c0,efe8e2a3-eace-427b-b4f1-cb8a937ec77d,e9aa9a3e-5b2b-4ac7-a2c7-073de2b2b24f,8bbdbcdd-5cd4-4100-b6d5-b7c9625b6107,50f4348b-c883-4e2f-8f11-ce233b859fa1,fda095cb-831d-4601-ad94-846013963de8,f92806d7-1768-443f-afe8-12bcde84d0f0,dd3a144d-ab7f-41f0-82b8-2e43a090d496,f0416e68-0200-4b77-a926-4f9d16e494da,970b0598-bcb0-4714-91fb-2e81440dccd8,bcd64cc6-2dd9-43f6-abbe-66318d332032,d930590d-bb92-4cc8-8bd1-23cd027f9edf,a3cd009f-0ab0-420d-9278-b9fdab939bbc,c27215d8-6835-4b68-bfbb-bdeac6100c04,b5d6115f-0370-4d7c-aad3-c194cc71cf98,871c3b6c-7379-419d-bda3-794b239ab90d
2024-7-11 08:43:22-debug:   Number of all scenes: 9
2024-7-11 08:43:22-debug:   Number of all scripts: 40
2024-7-11 08:43:22-debug:   Number of other assets: 568
2024-7-11 08:43:22-debug: // ---- build task 查询 Asset Bundle ---- (5ms)
2024-7-11 08:43:22-debug: run build task 查询 Asset Bundle success in 5 ms√, progress: 5%
2024-7-11 08:43:22-debug: 查询 Asset Bundle start, progress: 5%
2024-7-11 08:43:22-debug: [Build Memory track]: 查询 Asset Bundle start:165.31MB, end 164.50MB, increase: -826.72KB
2024-7-11 08:43:22-debug: // ---- build task 查询 Asset Bundle ----
2024-7-11 08:43:22-debug: // ---- build task 查询 Asset Bundle ---- (1ms)
2024-7-11 08:43:22-debug: run build task 查询 Asset Bundle success in 1 ms√, progress: 10%
2024-7-11 08:43:22-debug: [Build Memory track]: 查询 Asset Bundle start:164.51MB, end 164.63MB, increase: 116.59KB
2024-7-11 08:43:22-debug: 整理部分构建选项内数据到 settings.json start, progress: 10%
2024-7-11 08:43:22-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-7-11 08:43:22-debug: run build task 整理部分构建选项内数据到 settings.json success in √, progress: 12%
2024-7-11 08:43:22-debug: 填充脚本数据到 settings.json start, progress: 12%
2024-7-11 08:43:22-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:164.64MB, end 164.65MB, increase: 9.93KB
2024-7-11 08:43:22-debug: // ---- build task 填充脚本数据到 settings.json ----
2024-7-11 08:43:22-debug: // ---- build task 填充脚本数据到 settings.json ---- (1ms)
2024-7-11 08:43:22-debug: 整理部分构建选项内数据到 settings.json start, progress: 13%
2024-7-11 08:43:22-debug: [Build Memory track]: 填充脚本数据到 settings.json start:164.66MB, end 164.68MB, increase: 15.19KB
2024-7-11 08:43:22-debug: run build task 填充脚本数据到 settings.json success in 1 ms√, progress: 13%
2024-7-11 08:43:22-debug: // ---- build task 整理部分构建选项内数据到 settings.json ----
2024-7-11 08:43:22-debug: // ---- build task 整理部分构建选项内数据到 settings.json ---- (2ms)
2024-7-11 08:43:22-debug: run build task 整理部分构建选项内数据到 settings.json success in 2 ms√, progress: 15%
2024-7-11 08:43:22-debug: [Build Memory track]: 整理部分构建选项内数据到 settings.json start:164.69MB, end 164.81MB, increase: 125.41KB
2024-7-11 08:43:27-debug: refresh db internal success
2024-7-11 08:43:27-debug: refresh db assets success
2024-7-11 08:43:27-debug: Run asset db hook engine-extends:afterRefresh ...
2024-7-11 08:43:27-debug: Run asset db hook engine-extends:afterRefresh success!
2024-7-11 08:43:27-debug: asset-db:refresh-all-database (163ms)
2024-7-11 08:45:27-debug: refresh db internal success
2024-7-11 08:45:27-debug: refresh db assets success
2024-7-11 08:45:27-debug: Run asset db hook engine-extends:afterRefresh ...
2024-7-11 08:45:27-debug: Run asset db hook engine-extends:afterRefresh success!
2024-7-11 08:45:27-debug: asset-db:refresh-all-database (181ms)
2024-7-11 08:45:27-debug: asset-db:worker-effect-data-processing (3ms)
2024-7-11 08:45:27-debug: asset-db-hook-engine-extends-afterRefresh (4ms)
2024-7-11 08:45:36-debug: refresh db internal success
2024-7-11 08:45:36-debug: refresh db assets success
2024-7-11 08:45:36-debug: Run asset db hook engine-extends:afterRefresh ...
2024-7-11 08:45:36-debug: Run asset db hook engine-extends:afterRefresh success!
2024-7-11 08:45:36-debug: asset-db:refresh-all-database (180ms)
2024-7-11 08:50:33-debug: refresh db internal success
2024-7-11 08:50:33-debug: refresh db assets success
2024-7-11 08:50:33-debug: Run asset db hook engine-extends:afterRefresh ...
2024-7-11 08:50:33-debug: Run asset db hook engine-extends:afterRefresh success!
2024-7-11 08:50:33-debug: asset-db:refresh-all-database (170ms)
2024-7-11 08:50:33-debug: asset-db:worker-effect-data-processing (1ms)
2024-7-11 08:50:33-debug: asset-db-hook-engine-extends-afterRefresh (1ms)
2024-7-11 08:50:43-debug: refresh db internal success
2024-7-11 08:50:43-debug: refresh db assets success
2024-7-11 08:50:43-debug: Run asset db hook engine-extends:afterRefresh success!
2024-7-11 08:50:43-debug: Run asset db hook engine-extends:afterRefresh ...
2024-7-11 08:50:43-debug: asset-db:refresh-all-database (164ms)
2024-7-11 08:50:43-debug: asset-db-hook-engine-extends-afterRefresh (1ms)
2024-7-11 08:50:59-debug: refresh db internal success
2024-7-11 08:50:59-debug: %cImport%c: D:\TankFight\TK2\assets\Scenes\single1.scenebackground: #aaff85; color: #000;color: #000;
2024-7-11 08:50:59-debug: %cImport%c: D:\TankFight\TK2\assets\Scenesbackground: #aaff85; color: #000;color: #000;
2024-7-11 08:50:59-debug: refresh db assets success
2024-7-11 08:50:59-debug: Run asset db hook engine-extends:afterRefresh ...
2024-7-11 08:50:59-debug: Run asset db hook engine-extends:afterRefresh success!
2024-7-11 08:50:59-debug: asset-db:refresh-all-database (172ms)
2024-7-11 08:50:59-debug: asset-db-hook-engine-extends-afterRefresh (1ms)
2024-7-11 08:51:03-debug: start refresh asset from D:\TankFight\TK2\assets\Scenes\single.scene...
2024-7-11 08:51:03-debug: %cImport%c: D:\TankFight\TK2\assets\Scenes\single.scenebackground: #aaff85; color: #000;color: #000;
2024-7-11 08:51:03-debug: refresh asset D:\TankFight\TK2\assets\Scenes success
2024-7-11 08:51:04-debug: refresh db internal success
2024-7-11 08:51:04-debug: refresh db assets success
2024-7-11 08:51:04-debug: Run asset db hook engine-extends:afterRefresh ...
2024-7-11 08:51:04-debug: Run asset db hook engine-extends:afterRefresh success!
2024-7-11 08:51:04-debug: asset-db:refresh-all-database (185ms)
2024-7-11 08:51:04-debug: asset-db:worker-effect-data-processing (1ms)
2024-7-11 08:51:04-debug: asset-db-hook-engine-extends-afterRefresh (1ms)
2024-7-11 08:51:10-debug: refresh db internal success
2024-7-11 08:51:10-debug: refresh db assets success
2024-7-11 08:51:10-debug: Run asset db hook engine-extends:afterRefresh ...
2024-7-11 08:51:10-debug: Run asset db hook engine-extends:afterRefresh success!
2024-7-11 08:51:10-debug: asset-db:refresh-all-database (164ms)
2024-7-11 08:51:10-debug: asset-db:worker-effect-data-processing (1ms)
2024-7-11 08:51:10-debug: asset-db-hook-engine-extends-afterRefresh (1ms)
2024-7-11 08:51:23-debug: start remove asset D:\TankFight\TK2\assets\Scenes\single1.scene...
2024-7-11 08:51:23-log: 资源数据库已锁定，资源操作(bound _refreshAsset)将会延迟响应，请稍侯
2024-7-11 08:51:23-debug: refresh db internal success
2024-7-11 08:51:23-debug: %cDestroy%c: D:\TankFight\TK2\assets\Scenes\single1.scenebackground: #ffb8b8; color: #000;color: #000;
2024-7-11 08:51:23-debug: %cImport%c: D:\TankFight\TK2\assets\Scenesbackground: #aaff85; color: #000;color: #000;
2024-7-11 08:51:23-debug: refresh db assets success
2024-7-11 08:51:23-debug: Run asset db hook engine-extends:afterRefresh ...
2024-7-11 08:51:23-debug: start refresh asset from D:\TankFight\TK2\assets\Scenes\single1.scene...
2024-7-11 08:51:23-debug: Run asset db hook engine-extends:afterRefresh success!
2024-7-11 08:51:23-debug: remove asset D:\TankFight\TK2\assets\Scenes\single1.scene success
2024-7-11 08:51:23-debug: refresh asset D:\TankFight\TK2\assets\Scenes success
2024-7-11 08:51:23-debug: asset-db:refresh-all-database (180ms)
2024-7-11 08:51:23-debug: asset-db:worker-effect-data-processing (2ms)
2024-7-11 08:51:23-debug: asset-db-hook-engine-extends-afterRefresh (2ms)
2024-7-11 08:51:32-debug: refresh db internal success
2024-7-11 08:51:32-debug: refresh db assets success
2024-7-11 08:51:32-debug: Run asset db hook engine-extends:afterRefresh ...
2024-7-11 08:51:32-debug: Run asset db hook engine-extends:afterRefresh success!
2024-7-11 08:51:32-debug: asset-db:refresh-all-database (179ms)
2024-7-11 08:51:32-debug: asset-db:worker-effect-data-processing (1ms)
2024-7-11 08:51:32-debug: asset-db-hook-engine-extends-afterRefresh (1ms)
2024-7-11 08:53:23-debug: refresh db internal success
2024-7-11 08:53:23-debug: refresh db assets success
2024-7-11 08:53:23-debug: Run asset db hook engine-extends:afterRefresh ...
2024-7-11 08:53:23-debug: Run asset db hook engine-extends:afterRefresh success!
2024-7-11 08:53:23-debug: asset-db:refresh-all-database (164ms)
2024-7-11 08:53:23-debug: asset-db:worker-effect-data-processing (1ms)
2024-7-11 08:53:23-debug: asset-db-hook-engine-extends-afterRefresh (1ms)
2024-7-11 08:53:29-debug: refresh db internal success
2024-7-11 08:53:29-debug: refresh db assets success
2024-7-11 08:53:29-debug: Run asset db hook engine-extends:afterRefresh ...
2024-7-11 08:53:29-debug: Run asset db hook engine-extends:afterRefresh success!
2024-7-11 08:53:29-debug: asset-db:refresh-all-database (195ms)
2024-7-11 08:53:29-debug: asset-db:worker-effect-data-processing (1ms)
2024-7-11 08:53:29-debug: asset-db-hook-engine-extends-afterRefresh (1ms)
2024-7-11 08:53:36-debug: refresh db internal success
2024-7-11 08:53:36-debug: refresh db assets success
2024-7-11 08:53:36-debug: Run asset db hook engine-extends:afterRefresh ...
2024-7-11 08:53:36-debug: Run asset db hook engine-extends:afterRefresh success!
2024-7-11 08:53:36-debug: asset-db:worker-effect-data-processing (1ms)
2024-7-11 08:53:36-debug: asset-db:refresh-all-database (177ms)
2024-7-11 08:53:36-debug: asset-db-hook-engine-extends-afterRefresh (1ms)
2024-7-11 08:53:44-debug: refresh db internal success
2024-7-11 08:53:44-debug: %cImport%c: D:\TankFight\TK2\assets\Scenes\single1.scenebackground: #aaff85; color: #000;color: #000;
2024-7-11 08:53:44-debug: %cImport%c: D:\TankFight\TK2\assets\Scenesbackground: #aaff85; color: #000;color: #000;
2024-7-11 08:53:44-debug: refresh db assets success
2024-7-11 08:53:44-debug: Run asset db hook engine-extends:afterRefresh ...
2024-7-11 08:53:44-debug: Run asset db hook engine-extends:afterRefresh success!
2024-7-11 08:53:44-debug: asset-db:refresh-all-database (162ms)
2024-7-11 08:53:44-debug: asset-db:worker-effect-data-processing (1ms)
2024-7-11 08:53:44-debug: asset-db-hook-engine-extends-afterRefresh (1ms)
2024-7-11 08:54:28-debug: start remove asset D:\TankFight\TK2\assets\Scenes\single1.scene...
2024-7-11 08:54:28-log: 资源数据库已锁定，资源操作(bound _refreshAsset)将会延迟响应，请稍侯
2024-7-11 08:54:28-debug: refresh db internal success
2024-7-11 08:54:28-debug: %cDestroy%c: D:\TankFight\TK2\assets\Scenes\single1.scenebackground: #ffb8b8; color: #000;color: #000;
2024-7-11 08:54:28-debug: %cImport%c: D:\TankFight\TK2\assets\Scenesbackground: #aaff85; color: #000;color: #000;
2024-7-11 08:54:28-debug: refresh db assets success
2024-7-11 08:54:28-debug: Run asset db hook engine-extends:afterRefresh ...
2024-7-11 08:54:28-debug: Run asset db hook engine-extends:afterRefresh success!
2024-7-11 08:54:28-debug: start refresh asset from D:\TankFight\TK2\assets\Scenes\single1.scene...
2024-7-11 08:54:28-debug: refresh asset D:\TankFight\TK2\assets\Scenes success
2024-7-11 08:54:28-debug: remove asset D:\TankFight\TK2\assets\Scenes\single1.scene success
2024-7-11 08:54:28-debug: asset-db:refresh-all-database (168ms)
2024-7-11 08:54:28-debug: asset-db-hook-engine-extends-afterRefresh (1ms)
2024-7-11 08:55:04-debug: refresh db internal success
2024-7-11 08:55:04-debug: %cImport%c: D:\TankFight\TK2\assets\Scenes\single1.scenebackground: #aaff85; color: #000;color: #000;
2024-7-11 08:55:04-debug: %cImport%c: D:\TankFight\TK2\assets\Scenesbackground: #aaff85; color: #000;color: #000;
2024-7-11 08:55:04-debug: refresh db assets success
2024-7-11 08:55:04-debug: Run asset db hook engine-extends:afterRefresh ...
2024-7-11 08:55:04-debug: Run asset db hook engine-extends:afterRefresh success!
2024-7-11 08:55:04-debug: asset-db:refresh-all-database (168ms)
2024-7-11 09:01:54-debug: refresh db internal success
2024-7-11 09:01:54-debug: refresh db assets success
2024-7-11 09:01:54-debug: Run asset db hook engine-extends:afterRefresh ...
2024-7-11 09:01:54-debug: Run asset db hook engine-extends:afterRefresh success!
2024-7-11 09:01:54-debug: asset-db:refresh-all-database (188ms)
2024-7-11 09:01:54-debug: asset-db-hook-engine-extends-afterRefresh (1ms)
2024-7-11 09:07:04-debug: start refresh asset from D:\TankFight\TK2\assets\Scenes\single.scene...
2024-7-11 09:07:04-debug: %cImport%c: D:\TankFight\TK2\assets\Scenes\single.scenebackground: #aaff85; color: #000;color: #000;
2024-7-11 09:07:04-debug: refresh asset D:\TankFight\TK2\assets\Scenes success
2024-7-11 09:07:26-debug: start refresh asset from D:\TankFight\TK2\assets\Scenes\single.scene...
2024-7-11 09:07:26-debug: %cImport%c: D:\TankFight\TK2\assets\Scenes\single.scenebackground: #aaff85; color: #000;color: #000;
2024-7-11 09:07:26-debug: refresh asset D:\TankFight\TK2\assets\Scenes success
2024-7-11 09:08:15-debug: start refresh asset from D:\TankFight\TK2\assets\Scenes\single.scene...
2024-7-11 09:08:15-debug: %cImport%c: D:\TankFight\TK2\assets\Scenes\single.scenebackground: #aaff85; color: #000;color: #000;
2024-7-11 09:08:15-debug: refresh asset D:\TankFight\TK2\assets\Scenes success
2024-7-11 09:11:03-debug: start refresh asset from D:\TankFight\TK2\assets\Prefabs\SimpleLeaderBoard.prefab...
2024-7-11 09:11:03-debug: %cImport%c: D:\TankFight\TK2\assets\Prefabs\SimpleLeaderBoard.prefabbackground: #aaff85; color: #000;color: #000;
2024-7-11 09:11:03-debug: refresh asset D:\TankFight\TK2\assets\Prefabs success
2024-7-11 09:11:03-debug: %cImport%c: D:\TankFight\TK2\assets\Prefabsbackground: #aaff85; color: #000;color: #000;
2024-7-11 09:11:27-debug: refresh db internal success
2024-7-11 09:11:27-debug: refresh db assets success
2024-7-11 09:11:27-debug: Run asset db hook engine-extends:afterRefresh ...
2024-7-11 09:11:27-debug: Run asset db hook engine-extends:afterRefresh success!
2024-7-11 09:11:27-debug: asset-db:refresh-all-database (187ms)
2024-7-11 09:11:27-debug: asset-db:worker-effect-data-processing (2ms)
2024-7-11 09:11:27-debug: asset-db-hook-engine-extends-afterRefresh (2ms)
2024-7-11 09:13:42-debug: start refresh asset from D:\TankFight\TK2\assets\Scripts\SLB.ts...
2024-7-11 09:13:42-debug: %cImport%c: D:\TankFight\TK2\assets\Scripts\SLB.tsbackground: #aaff85; color: #000;color: #000;
2024-7-11 09:13:42-debug: refresh asset D:\TankFight\TK2\assets\Scripts success
2024-7-11 09:13:42-debug: %cImport%c: D:\TankFight\TK2\assets\Scriptsbackground: #aaff85; color: #000;color: #000;
2024-7-11 09:14:16-debug: refresh db internal success
2024-7-11 09:14:16-debug: refresh db assets success
2024-7-11 09:14:16-debug: Run asset db hook engine-extends:afterRefresh ...
2024-7-11 09:14:16-debug: Run asset db hook engine-extends:afterRefresh success!
2024-7-11 09:14:16-debug: asset-db:refresh-all-database (167ms)
2024-7-11 09:14:20-debug: refresh db internal success
2024-7-11 09:14:20-debug: %cImport%c: D:\TankFight\TK2\assets\Scripts\SLB.tsbackground: #aaff85; color: #000;color: #000;
2024-7-11 09:14:20-debug: refresh db assets success
2024-7-11 09:14:20-debug: Run asset db hook engine-extends:afterRefresh ...
2024-7-11 09:14:20-debug: Run asset db hook engine-extends:afterRefresh success!
2024-7-11 09:14:20-debug: asset-db:refresh-all-database (162ms)
2024-7-11 09:14:20-debug: asset-db:worker-effect-data-processing (-1ms)
2024-7-11 09:14:25-debug: start move asset from D:\TankFight\TK2\assets\Scripts\SLB.ts -> D:\TankFight\TK2\assets\Scripts\LB.ts...
2024-7-11 09:14:25-debug: start refresh asset from D:\TankFight\TK2\assets\Scripts\LB.ts...
2024-7-11 09:14:25-debug: %cImport%c: D:\TankFight\TK2\assets\Scripts\LB.tsbackground: #aaff85; color: #000;color: #000;
2024-7-11 09:14:25-debug: refresh asset D:\TankFight\TK2\assets\Scripts success
2024-7-11 09:14:25-debug: start refresh asset from D:\TankFight\TK2\assets\Scripts...
2024-7-11 09:14:25-debug: %cImport%c: D:\TankFight\TK2\assets\Scriptsbackground: #aaff85; color: #000;color: #000;
2024-7-11 09:14:25-debug: refresh asset D:\TankFight\TK2\assets success
2024-7-11 09:14:25-debug: move asset from D:\TankFight\TK2\assets\Scripts\SLB.ts -> D:\TankFight\TK2\assets\Scripts\LB.ts success
2024-7-11 09:15:06-debug: refresh db internal success
2024-7-11 09:15:06-debug: %cImport%c: D:\TankFight\TK2\assets\Scripts\LB.tsbackground: #aaff85; color: #000;color: #000;
2024-7-11 09:15:06-debug: refresh db assets success
2024-7-11 09:15:06-debug: Run asset db hook engine-extends:afterRefresh ...
2024-7-11 09:15:06-debug: Run asset db hook engine-extends:afterRefresh success!
2024-7-11 09:15:06-debug: asset-db:refresh-all-database (174ms)
2024-7-11 09:15:21-debug: refresh db internal success
2024-7-11 09:15:21-debug: %cImport%c: D:\TankFight\TK2\assets\Scripts\LB.tsbackground: #aaff85; color: #000;color: #000;
2024-7-11 09:15:21-debug: refresh db assets success
2024-7-11 09:15:21-debug: Run asset db hook engine-extends:afterRefresh success!
2024-7-11 09:15:21-debug: Run asset db hook engine-extends:afterRefresh ...
2024-7-11 09:15:21-debug: asset-db:refresh-all-database (180ms)
2024-7-11 09:15:21-debug: asset-db:worker-effect-data-processing (1ms)
2024-7-11 09:15:21-debug: asset-db-hook-engine-extends-afterRefresh (1ms)
2024-7-11 09:15:32-debug: refresh db internal success
2024-7-11 09:15:32-debug: %cImport%c: D:\TankFight\TK2\assets\Scripts\LB.tsbackground: #aaff85; color: #000;color: #000;
2024-7-11 09:15:32-debug: refresh db assets success
2024-7-11 09:15:32-debug: Run asset db hook engine-extends:afterRefresh ...
2024-7-11 09:15:32-debug: Run asset db hook engine-extends:afterRefresh success!
2024-7-11 09:15:32-debug: asset-db:refresh-all-database (177ms)
2024-7-11 09:15:32-debug: asset-db:worker-effect-data-processing (3ms)
2024-7-11 09:15:32-debug: asset-db-hook-engine-extends-afterRefresh (3ms)
2024-7-11 09:24:08-debug: refresh db internal success
2024-7-11 09:24:08-debug: %cImport%c: D:\TankFight\TK2\assets\Scripts\LB.tsbackground: #aaff85; color: #000;color: #000;
2024-7-11 09:24:08-debug: refresh db assets success
2024-7-11 09:24:08-debug: Run asset db hook engine-extends:afterRefresh ...
2024-7-11 09:24:08-debug: Run asset db hook engine-extends:afterRefresh success!
2024-7-11 09:24:08-debug: asset-db:refresh-all-database (174ms)
2024-7-11 09:24:08-debug: asset-db-hook-engine-extends-afterRefresh (1ms)
2024-7-11 09:28:04-debug: refresh db internal success
2024-7-11 09:28:04-debug: %cImport%c: D:\TankFight\TK2\assets\Scripts\LB.tsbackground: #aaff85; color: #000;color: #000;
2024-7-11 09:28:04-debug: refresh db assets success
2024-7-11 09:28:04-debug: Run asset db hook engine-extends:afterRefresh ...
2024-7-11 09:28:04-debug: Run asset db hook engine-extends:afterRefresh success!
2024-7-11 09:28:04-debug: asset-db:refresh-all-database (207ms)
2024-7-11 09:28:04-debug: asset-db:worker-effect-data-processing (1ms)
2024-7-11 09:28:04-debug: asset-db-hook-engine-extends-afterRefresh (1ms)
2024-7-11 09:28:09-debug: start refresh asset from D:\TankFight\TK2\assets\Scenes\single.scene...
2024-7-11 09:28:09-debug: %cImport%c: D:\TankFight\TK2\assets\Scenes\single.scenebackground: #aaff85; color: #000;color: #000;
2024-7-11 09:28:09-debug: refresh asset D:\TankFight\TK2\assets\Scenes success
